<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="UserMap"
		type="study.model1.mybatis.model.User">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="name" column="name" />
		<result property="userId" column="userid" />
		<result property="userPw" column="userPw" />
		<result property="birthDate" column="birthdate" />
		<result property="gender" column="gender" />
		<result property="tel" column="tel" />
		<result property="address" column="address" />
		<result property="email" column="email" />
	</resultMap>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertUser"
		parameterType="study.model1.mybatis.model.User"
		useGeneratedKeys="true" keyProperty="userNo">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		insert into user (name, userid, userPw, birthdate,gender, tel,
		address, email) values
		(#{name},#{userId},#{userPw},#{birthDate},#{gender},#{tel},#{address},#{email});
	</insert>

	<!--단일 유저 데이터 수 조회를 위한 기능 정의 -->
	<!-- 아이디 중복 확인 -->
	<select id="selectCount"
		parameterType="study.model1.mybatis.model.User" resultType="int">
		<!-- 이 안에서 처리할 sql 문을 명시한다. -->
		select count(*) from user
		<where>
			userId = #{userId};
		</where>

	</select>

	<!--단일 유저 데이터 수 조회를 위한 기능 정의 -->
	<!-- 핸드폰 번호 중복 확인 -->
	<select id="checkTel"
		parameterType="study.model1.mybatis.model.User" resultType="int">
		<!-- 이 안에서 처리할 sql 문을 명시한다. -->
		select count(*) from user
		<where>
			tel = #{tel};
		</where>

	</select>
	<!--단일 유저 데이터 수 조회를 위한 기능 정의 -->
	<!-- 이메일 중복 확인 -->
	<select id="checkEmail"
		parameterType="study.model1.mybatis.model.User" resultType="int">
		<!-- 이 안에서 처리할 sql 문을 명시한다. -->
		select count(*) from user
		<where>
			email = #{email};
		</where>

	</select>
	<select id="login"
		parameterType="study.model1.mybatis.model.User" resultMap="UserMap">
		<!-- 이 안에서 처리할 sql 문을 명시한다. -->
		select userNo, name, userId, userPw, birthDate, gender, tel, address,
		email from user
		<where>
			userId = #{userId} and userPw = #{userPw};
		</where>

	</select>


	<!-- 단일 유저 아이디 조회를 위한 기능 정의 -->
	<!-- 아이디찾기 id 값 반환 -->

	<select id="findId"
		parameterType="study.model1.mybatis.model.User" resultType="String">
		<!-- 이 안에서 처리할 sql 문을 명시한다. -->
		select userid from user
		<where>
			name = #{name} and email=#{email} and tel= #{tel};
		</where>
	</select>

	<select id="countforUpdatePw"
		parameterType="study.model1.mybatis.model.User" resultType="int">
		<!-- 이 안에서 처리할 sql문을 명시 -->

		select count(*) from user
		<where>
			userid=#{userId} and name=#{name} and tel=#{tel} and
			email=#{email};
		</where>
	</select>



	<!-- 비밀번호 수정을 위한 기능 정의 -->
	<update id="updatePw"
		parameterType="study.model1.mybatis.model.User">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		update user set userPw=#{userPw}
		<where>
			userid=#{userId} and name=#{name} and tel=#{tel} and
			email=#{email};
		</where>

	</update>









</mapper>


