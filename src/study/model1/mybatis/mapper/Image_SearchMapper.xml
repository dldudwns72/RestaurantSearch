<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Image_SearchMapper">
    <!-- Beans 클래스의 객체이름(restNo)과 클래스이름(type)을 명시한다. -->
    <resultMap id="image_searchMap" type="study.model1.mybatis.model.Img_Search$Items">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="imageNo " column="imageNo " />
        <result property="title" column="title" />
        <result property="link" column="link" />
        <result property="thumbnail " column="thumbnail " />
        <result property="sizeheight " column="sizeheight " />
        <result property="sizewidth " column="sizewidth " />
  
        
    </resultMap>
    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem" 
            parameterType="study.model1.mybatis.model.Img_Search$Items" 
            resultMap="image_searchMap">
        <!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
        select imageNo,title,link,thumbnail,sizeheight,sizewidth 
        from img_search where imageNo=#{imageNo};
    </select>
    
    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList"
    		parameterType="study.model1.mybatis.model.Img_Search$Items" 
            resultMap="image_searchMap">
        <!-- 이 안에서 처리할 SQL문을 명시한다. -->
        select imageNo,title,link,thumbnail,sizeheight,sizewidth
        from img_search 
         <!-- <where>
        	<if test="title != null and title != ''">
        		title like concat('%',#{title},'%')
        	</if>
        	<if test="category != null and category != ''">
        		or category like concat('%',#{category},'%')
        	 </if> 
        </where> 
        <if test="listCount > 0 ">
        	limit #{offset},#{listCount} 
        </if> -->
    </select>
    
    
    <!-- 데이터 수 조회를 위한 기능 정의 , result 값이 int 형으로 나오므로 resultType = int 선언  -->
    <select id="selectCount" 
            parameterType="study.model1.mybatis.model.Img_Search$Items" 
            resultType="int">
        <!-- 이 안에서 처리할 SQL문을 명시한다. -->
        SELECT COUNT(*) FROM img_search
        <!-- <where>
        	<if test="title != null and title != ''">
        		title like concat('%',#{title},'%')
        	</if>
        	 <if test="category != null and category != ''">
        		or category like concat('%',#{category},'%')
        	</if> 
        </where> -->
    </select>
    
    <!-- 데이터 수 조회를 위한 기능 정의 , result 값이 int 형으로 나오므로 resultType = int 선언  -->
    <!-- 
    <select id="selectCount_Kor" 
            parameterType="study.model1.mybatis.model.Image_Search$Items" 
            resultType="int">
        이 안에서 처리할 SQL문을 명시한다.
        SELECT COUNT(*) FROM img_search
        where category like "%한식%"
        <if test="title != null and title != ''">
            and title like concat('%',#{title},'%')
        </if>
        <where>
        	<if test="title != null and title != ''">
        		title like concat('%',#{title},'%')
        	</if>
        	 <if test="category != null and category != ''">
        		or category like concat('%',#{category},'%')
        	</if> 
        </where>
    </select> -->
    
    
    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem" 
            parameterType="study.model1.mybatis.model.Img_Search$Items" 
            useGeneratedKeys="true"
            keyProperty="restNo">
        <!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
        insert into img_search(title,link,category,description,
        telephone,address,roadAddress,mapx,mapy) values (#{title},#{link},#{category},#{description},
        #{telephone},#{address},#{roadAddress},#{mapx},#{mapy});
    </insert>
    
    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="deleteItem" parameterType="study.model1.mybatis.model.Img_Search$Items">
        <!-- 이 안에서 처리할 SQL문을 명시한다. -->
        delete from img_search where restNo =#{restNo};
    </delete>
    
    <!-- 데이터 갱신을 위한 기능 정의 -->
    <update id="updateItem" parameterType="study.model1.mybatis.model.Img_Search$Items">
        <!-- 이 안에서 처리할 SQL문을 명시한다. -->
        update img_search set title =#{title},category=#{category} where restNo = #{restNo};
    </update>
</mapper>